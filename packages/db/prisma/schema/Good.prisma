// The real item that is being sold.
model Good {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sku                 String
  distributionChannel DistributionChannel
  isArchived          Boolean             @default(false)

  collection               Collection?                        @relation(fields: [collectionId], references: [id])
  retailGroup              GoodsRetailGroup?                  @relation(fields: [retailGroupId], references: [id])
  localizations            GoodLocalization[]
  stock                    Stock[]
  media                    GoodMedia[]
  promotions               PricePromotion[]
  bulkPrices               BulkPrice[]
  retailPrices             RetailPrice[]
  additionalIdentificators AdditionalGoodIdentificatorValue[]
  attributes               GoodAttributes[]

  collectionId  Int?
  retailGroupId Int?

  @@index([id])
  @@index([retailGroupId])
  @@index([collectionId])
  @@index([isArchived])
  @@index([distributionChannel])
}

model GoodAttributes {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  index Int @default(0)

  attribute Attribute        @relation(fields: [attributeId], references: [id], onDelete: Cascade)
  good      Good             @relation(fields: [goodId], references: [id], onDelete: Cascade)
  values    AttributeValue[]

  attributeId Int
  goodId      Int

  @@unique([attributeId, goodId])
  @@index([id])
  @@index([attributeId])
  @@index([goodId])
}

enum DistributionChannel {
  BULK
  RETAIL
}

model AdditionalGoodIdentificator {
  name      String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  values        AdditionalGoodIdentificatorValue[]
  importSchemas ImportSchemaAdditionalIdentificators[]

  @@index([name])
}

model AdditionalGoodIdentificatorValue {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  value String

  good          Good                        @relation(fields: [goodId], references: [id], onDelete: Cascade)
  identificator AdditionalGoodIdentificator @relation(fields: [identificatorName], references: [name], onDelete: Cascade)

  goodId            Int
  identificatorName String

  @@id([identificatorName, goodId])
}

model GoodLocalization {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String

  good         Good         @relation(fields: [goodId], references: [id], onDelete: Cascade)
  localization Localization @relation(fields: [locale], references: [locale], onDelete: Cascade)

  goodId Int
  locale String

  @@id([goodId, locale])
  @@index([goodId, locale])
  @@index([goodId])
  @@index([locale])
}

model GoodMedia {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  index Int @default(0)

  file File @relation(fields: [fileKey], references: [key], onDelete: Cascade)
  good Good @relation(fields: [goodId], references: [id], onDelete: Cascade)

  fileKey String
  goodId  Int

  @@id([fileKey, goodId])
  @@index([fileKey, goodId])
  @@index([fileKey])
  @@index([goodId])
}

model BulkPrice {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fullPrice Decimal @default(0) @db.Decimal(12, 2)
  price     Decimal @default(0) @db.Decimal(12, 2)
  discount  Decimal @default(0) @db.Decimal(12, 7) // Max discount is 99,999.9999999%

  currency Currency @relation(fields: [currencyId], references: [id], onDelete: Cascade)
  good     Good     @relation(fields: [goodId], references: [id], onDelete: Cascade)

  currencyId CurrencyId
  goodId     Int

  @@id([goodId, currencyId])
  @@index([goodId, currencyId])
  @@index([goodId])
  @@index([currencyId])
}

model RetailPrice {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fullPrice Decimal @default(0) @db.Decimal(12, 2)
  price     Decimal @default(0) @db.Decimal(12, 2)
  discount  Decimal @default(0) @db.Decimal(12, 7) // Max discount is 99,999.9999999%

  currency Currency @relation(fields: [currencyId], references: [id], onDelete: Cascade)
  good     Good     @relation(fields: [goodId], references: [id], onDelete: Cascade)

  currencyId CurrencyId
  goodId     Int

  @@id([goodId, currencyId])
  @@index([goodId, currencyId])
  @@index([goodId])
  @@index([currencyId])
}
