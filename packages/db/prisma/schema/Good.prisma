// The real item that is being sold.
model Good {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  isArchived          Boolean             @default(false)
  distributionChannel DistributionChannel

  collection               Collection?                        @relation(fields: [collectionId], references: [id])
  retailGroup              GoodsRetailGroup?                  @relation(fields: [retailGroupId], references: [id])
  localizations            GoodLocalization[]
  attributes               AttributeValue[]
  stock                    Stock[]
  media                    GoodMedia[]
  promotions               PricePromotion[]
  bulkPrices               BulkPrice[]
  retailPrices             RetailPrice[]
  children                 Good[]                             @relation("children")
  parent                   Good?                              @relation("children", fields: [parentId], references: [id])
  additionalIdentificators AdditionalGoodIdentificatorValue[]

  collectionId  Int?
  retailGroupId Int?
  parentId      Int? @map("goodId")

  @@index([id])
  @@index([retailGroupId])
  @@index([collectionId])
  @@index([isArchived])
  @@index([distributionChannel])
}

enum DistributionChannel {
  BULK
  RETAIL
}

model AdditionalGoodIdentificator {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  values AdditionalGoodIdentificatorValue[]

  @@index([id])
  @@index([name])
}

model AdditionalGoodIdentificatorValue {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  value String

  identificator AdditionalGoodIdentificator @relation(fields: [identificatorId], references: [id], onDelete: Cascade)

  identificatorId Int
  good            Good? @relation(fields: [goodId], references: [id])
  goodId          Int?

  @@id([identificatorId, value])
  @@index([identificatorId, value])
  @@index([identificatorId])
  @@index([value])
}

model GoodLocalization {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  language String
  name     String

  good Good @relation(fields: [goodId], references: [id], onDelete: Cascade)

  goodId Int

  @@id([goodId, language])
  @@index([goodId, language])
  @@index([goodId])
  @@index([language])
}

model GoodMedia {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  file File @relation(fields: [fileId], references: [id], onDelete: Cascade)
  good Good @relation(fields: [goodId], references: [id], onDelete: Cascade)

  fileId Int
  goodId Int

  @@id([fileId, goodId])
  @@index([fileId, goodId])
  @@index([fileId])
  @@index([goodId])
}

model BulkPrice {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  price    Decimal @default(0) @db.Decimal(12, 2)
  discount Decimal @default(0) @db.Decimal(12, 7) // Max discount is 99,999.9999999%

  currency Currency @relation(fields: [currencyId], references: [id], onDelete: Cascade)
  good     Good     @relation(fields: [goodId], references: [id], onDelete: Cascade)

  currencyId CurrencyId
  goodId     Int

  @@id([goodId, currencyId])
  @@index([goodId, currencyId])
  @@index([goodId])
  @@index([currencyId])
}

model RetailPrice {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  price    Decimal @default(0) @db.Decimal(12, 2)
  discount Decimal @default(0) @db.Decimal(12, 7) // Max discount is 99,999.9999999%

  currency Currency @relation(fields: [currencyId], references: [id], onDelete: Cascade)
  good     Good     @relation(fields: [goodId], references: [id], onDelete: Cascade)

  currencyId CurrencyId
  goodId     Int

  @@id([goodId, currencyId])
  @@index([goodId, currencyId])
  @@index([goodId])
  @@index([currencyId])
}
